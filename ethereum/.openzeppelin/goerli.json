{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE15552A78883AFA835FAa7092e3861afF15dC294",
    "txHash": "0xf859d166a15ecbd27aecaf9ae751437d87563c51b5a852979fd42bf878a67a06"
  },
  "proxies": [
    {
      "address": "0x570792f74D9dAA887712Ae156DC285ed46844f42",
      "txHash": "0x42e4a1f86721baae2a6bc39f8c2b7355c9ba6c9468a7eac5aa0c791b38940fc7",
      "kind": "transparent"
    },
    {
      "address": "0x0A5852827090d63d09311A007C2eB5814D3Bc102",
      "txHash": "0x98fbc73025d2947825bc6003dc5d082d72f9d115cd52e78ee937e6b227f1378c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "37bcf74ef7aa7edf85a2912d363febb0b04cb793c675f71e7251341ec0245ca5": {
      "address": "0x9857F4c138Ece8519Cda1107608Fc71bd847219c",
      "txHash": "0x9641140aed73e5f8d1615fef7467a05df071360528bc85f6ea83ddc38049c5fe",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_struct(UserInfo)3608_storage)",
            "contract": "ERC4907Upgradeable",
            "src": "contracts/ERC4907Upgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4907Upgradeable",
            "src": "contracts/ERC4907Upgradeable.sol:22"
          },
          {
            "label": "_usedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC4907EnumerableUpgradeable",
            "src": "contracts/ERC4907EnumerableUpgradeable.sol:16"
          },
          {
            "label": "_usedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC4907EnumerableUpgradeable",
            "src": "contracts/ERC4907EnumerableUpgradeable.sol:19"
          },
          {
            "label": "_allUsedTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC4907EnumerableUpgradeable",
            "src": "contracts/ERC4907EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_allUsedTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC4907EnumerableUpgradeable",
            "src": "contracts/ERC4907EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_usedBalances",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC4907EnumerableUpgradeable",
            "src": "contracts/ERC4907EnumerableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4907EnumerableUpgradeable",
            "src": "contracts/ERC4907EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_rentingConditions",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(RentingConditions)3823_storage)",
            "contract": "Marketplace",
            "src": "contracts/Marketplace.sol:20"
          },
          {
            "label": "minRentPrice",
            "offset": 0,
            "slot": "306",
            "type": "t_uint32",
            "contract": "Marketplace",
            "src": "contracts/Marketplace.sol:23"
          },
          {
            "label": "minRentDuration",
            "offset": 4,
            "slot": "306",
            "type": "t_uint32",
            "contract": "Marketplace",
            "src": "contracts/Marketplace.sol:26"
          },
          {
            "label": "_allAvailableForRenting",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Marketplace",
            "src": "contracts/Marketplace.sol:29"
          },
          {
            "label": "_allAvailableForRentingIndex",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Marketplace",
            "src": "contracts/Marketplace.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "309",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Marketplace",
            "src": "contracts/Marketplace.sol:34"
          },
          {
            "label": "priceFeed",
            "offset": 0,
            "slot": "358",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:27"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(Counter)2082_storage",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:29"
          },
          {
            "label": "contentSubscriptionDuration",
            "offset": 0,
            "slot": "360",
            "type": "t_uint32",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:32"
          },
          {
            "label": "_expirations",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:35"
          },
          {
            "label": "contentSubscriptionPrice",
            "offset": 0,
            "slot": "362",
            "type": "t_uint32",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:38"
          },
          {
            "label": "_allowedSlippage",
            "offset": 4,
            "slot": "362",
            "type": "t_uint8",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:41"
          },
          {
            "label": "_contentProvider",
            "offset": 5,
            "slot": "362",
            "type": "t_address",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:44"
          },
          {
            "label": "_marketplaceProvider",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:47"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:50"
          },
          {
            "label": "_baseUri",
            "offset": 0,
            "slot": "365",
            "type": "t_string_storage",
            "contract": "Subscription",
            "src": "contracts/Subscription.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RentingConditions)3823_storage)": {
            "label": "mapping(uint256 => struct Marketplace.RentingConditions)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UserInfo)3608_storage)": {
            "label": "mapping(uint256 => struct ERC4907Upgradeable.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2082_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RentingConditions)3823_storage": {
            "label": "struct Marketplace.RentingConditions",
            "members": [
              {
                "label": "price",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint128",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)3608_storage": {
            "label": "struct ERC4907Upgradeable.UserInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expires",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
